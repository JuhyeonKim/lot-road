<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nagesoft.postcode.dao.PostDAO">
    <resultMap id="buildingInfoResult" type="com.nagesoft.postcode.model.BuildingInfo">
        <result property="legalDongCode" column="LEGAL_DONG_CD" />
        <result property="sidoName" column="SIDO_NM" />
        <result property="sigunguName" column="SIGUNGU_NM" />
        <result property="legalDongName" column="LEGAL_DONG_NM" />
        <result property="legalRiName" column="LEGAL_RI_NM" />
        <result property="sanYN" column="SAN_YN" />
        <result property="lotBasicNumber" column="LOT_BASIC_NUM" />
        <result property="lotPartNumber" column="LOT_PART_NUM" />
        <result property="roadCode" column="ROAD_CD" />
        <result property="roadName" column="ROAD_NM" />
        <result property="underYN" column="UNDER_YN" />
        <result property="buildingBasicNumber" column="BD_BASIC_NUM" />
        <result property="buildingPartNumber" column="BD_PART_NUM" />
        <result property="postCode" column="POST_CD" />
        <result property="baseAreaNumber" column="BASE_AREA_NUM" />
        <result property="sigunguBuildingName" column="SIGUNGU_BD_NM" />
        <result property="jointYN" column="JOINT_YN" />
    </resultMap>

    <insert id="insertBuildingInfo" parameterType="buildingInfo">
      INSERT INTO POST_BD_INFO(
        BD_SEQ
        ,LEGAL_DONG_CD
        ,SIDO_NM
        ,SIGUNGU_NM
        ,LEGAL_DONG_NM
        ,LEGAL_RI_NM
        ,SAN_YN
        ,LOT_BASIC_NUM
        ,LOT_PART_NUM
        ,ROAD_CD
        ,ROAD_NM
        ,UNDER_YN
        ,BD_BASIC_NUM
        ,BD_PART_NUM
        ,POST_CD
        ,SIGUNGU_BD_NM
        ,JOINT_YN
        ,BASE_AREA_NUM
      ) VALUES (
        #{buildingSeq,jdbcType=VARCHAR}
        ,#{legalDongCode,jdbcType=VARCHAR}
        ,#{sidoName,jdbcType=VARCHAR}
        ,#{sigunguName,jdbcType=VARCHAR}
        ,#{legalDongName,jdbcType=VARCHAR}
        ,#{legalRiName,jdbcType=VARCHAR}
        ,#{sanYN}
        ,#{lotBasicNumber}
        ,#{lotPartNumber}
        ,#{roadCode,jdbcType=VARCHAR}
        ,#{roadName,jdbcType=VARCHAR}
        ,#{underYN}
        ,#{buildingBasicNumber}
        ,#{buildingPartNumber}
        ,#{postCode,jdbcType=VARCHAR}
        ,#{sigunguBuildingName,jdbcType=VARCHAR}
        ,#{jointYN}
        ,#{baseAreaNumber,jdbcType=VARCHAR}
      )
    </insert>

    <insert id="insertRefLot" parameterType="buildingInfo">
      INSERT INTO POST_REF_LOT(
        ROAD_CD
        ,UNDER_YN
        ,BD_BASIC_NUM
        ,BD_PART_NUM
        ,LOT_SEQ
        ,LEGAL_DONG_CD
        ,SIDO_NM
        ,SIGUNGU_NM
        ,LEGAL_DONG_NM
        ,LEGAL_RI_NM
        ,SAN_YN
        ,LOT_BASIC_NUM
        ,LOT_PART_NUM
      ) VALUES (
         #{roadCode,jdbcType=VARCHAR}
        ,#{underYN}
        ,#{buildingBasicNumber}
        ,#{buildingPartNumber}
        ,#{lotSeq}
        ,#{legalDongCode}
        ,#{sidoName,jdbcType=VARCHAR}
        ,#{sigunguName,jdbcType=VARCHAR}
        ,#{legalDongName,jdbcType=VARCHAR}
        ,#{legalRiName,jdbcType=VARCHAR}
        ,#{sanYN}
        ,#{lotBasicNumber}
        ,#{lotPartNumber}
      )
    </insert>
    <select id="listRoadAddr" resultType="buildingInfo" resultMap="buildingInfoResult">
        <if test="SKIP_PAGING == false">
            <include refid="NGCommonSQL.pagingHeaderMySQL" />
        </if>
        SELECT <include refid="listColumns" /> FROM (
            SELECT BD.* FROM POST_BD_INFO BD
            LEFT OUTER JOIN POST_REF_LOT REF
            ON BD.ROAD_CD = REF.ROAD_CD
            AND BD.UNDER_YN = REF.UNDER_YN
            AND BD.BD_BASIC_NUM = REF.BD_BASIC_NUM
            AND BD.BD_PART_NUM = REF.BD_PART_NUM
            <include refid="buildingInfoCondition" />
            ) AS TMP
        GROUP BY <include refid="listColumns" />
        ORDER BY ROAD_NM ASC
        <if test="SKIP_PAGING == false">
            <include refid="NGCommonSQL.pagingFooterMySQL" />
        </if>
    </select>
    <select id="countRoadAddr" resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT FROM (
            SELECT
            <include refid="listColumns" />
            FROM (
                SELECT BD.*
                FROM POST_BD_INFO BD
                LEFT OUTER JOIN POST_REF_LOT REF
                ON BD.ROAD_CD = REF.ROAD_CD
                AND BD.UNDER_YN = REF.UNDER_YN
                AND BD.BD_BASIC_NUM = REF.BD_BASIC_NUM
                AND BD.BD_PART_NUM = REF.BD_PART_NUM
                <include refid="buildingInfoCondition" />
            ) AS TMP
            GROUP BY <include refid="listColumns" />
        ) CNT_TMP
    </select>

    <select id="listLotAddr" resultType="buildingInfo" resultMap="buildingInfoResult">
        <if test="SKIP_PAGING == false">
            <include refid="NGCommonSQL.pagingHeaderMySQL" />
        </if>
        SELECT <include refid="listColumns" /> FROM (
            SELECT BD.* FROM POST_BD_INFO BD
            LEFT OUTER JOIN POST_REF_LOT REF
            ON BD.ROAD_CD = REF.ROAD_CD
            AND BD.UNDER_YN = REF.UNDER_YN
            AND BD.BD_BASIC_NUM = REF.BD_BASIC_NUM
            AND BD.BD_PART_NUM = REF.BD_PART_NUM
            <include refid="lotCondition" />
            ) AS TMP
        GROUP BY <include refid="listColumns" />
        ORDER BY LEGAL_DONG_NM ASC, LOT_BASIC_NUM ASC
        <if test="SKIP_PAGING == false">
            <include refid="NGCommonSQL.pagingFooterMySQL" />
        </if>
    </select>
    <select id="countLotAddr" resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT FROM (
          SELECT
        <include refid="listColumns" />
          FROM (
                 SELECT BD.*
                 FROM POST_BD_INFO BD
                   LEFT OUTER JOIN POST_REF_LOT REF
                     ON BD.ROAD_CD = REF.ROAD_CD
                     AND BD.UNDER_YN = REF.UNDER_YN
                     AND BD.BD_BASIC_NUM = REF.BD_BASIC_NUM
                     AND BD.BD_PART_NUM = REF.BD_PART_NUM
                  <include refid="lotCondition" />
               ) AS TMP
          GROUP BY <include refid="listColumns" />
        ) CNT_TMP
    </select>
    <select id="listSido" resultType="java.lang.String">
      SELECT SIDO_NM AS sidoName FROM POST_BD_INFO
      GROUP BY SIDO_NM
    </select>
    <select id="listSigungu" resultType="java.util.Map">
      SELECT SIDO_NM AS sidoName,SIGUNGU_NM AS sigunguName FROM POST_BD_INFO
        GROUP BY SIDO_NM,SIGUNGU_NM
        HAVING SIDO_NM = #{sidoName}
    </select>


    <sql id="buildingInfoCondition">
      <where>
          <if test="true">
              AND BD.SIDO_NM = #{sidoName}
          </if>
          <if test="true">
              AND BD.ROAD_NM LIKE CONCAT(#{keyword},'%')
          </if>
          <if test="sigunguName != null">
              AND BD.SIGUNGU_NM = #{sigunguName}
          </if>
          <if test="buildingBasicNumber != null">
              AND BD.BD_BASIC_NUM = #{buildingBasicNumber}
          </if>
          <if test="buildingPartNumber != null">
              AND BD.BD_PART_NUM = #{buildingPartNumber}
          </if>
      </where>
    </sql>
    <sql id="lotCondition">
        <where>
            <if test="true">
                AND BD.SIDO_NM = #{sidoName}
            </if>
            <if test="true">
                AND (BD.LEGAL_DONG_NM LIKE CONCAT(#{keyword}, '%') OR  BD.LEGAL_RI_NM LIKE CONCAT(#{keyword}, '%'))
            </if>
            <if test="sigunguName != null">
                AND BD.SIGUNGU_NM = #{sigunguName}
            </if>
            <if test="buildingBasicNumber != null">
                AND BD.LOT_BASIC_NUM = #{buildingBasicNumber}
            </if>
            <if test="buildingPartNumber != null">
                AND BD.LOT_PART_NUM = #{buildingPartNumber}
            </if>
        </where>
    </sql>
    <sql id="listColumns">
        SIDO_NM,SIGUNGU_NM, LEGAL_DONG_NM, LEGAL_RI_NM,LOT_BASIC_NUM,LOT_PART_NUM, ROAD_NM, BD_BASIC_NUM, BD_PART_NUM,SIGUNGU_BD_NM,POST_CD,BASE_AREA_NUM,JOINT_YN
    </sql>

</mapper>